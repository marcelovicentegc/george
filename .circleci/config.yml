# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10

    working_directory: ~/app
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install node dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  test:
    docker:
      - image: circleci/redis:latest
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: dreamcatcher_db

    working_directory: ~/app
    steps:
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Install redis-server
          command: sudo apt update && sudo apt install redis-server -y

      - run:
          name: Start redis-server
          command: sudo service redis-server start

      - checkout

      - run:
          name: Start the application
          command: yarn start & wait-on http://localhost:8000
      # - run:
      #   name: Run tests
      #   command: yarn test

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
