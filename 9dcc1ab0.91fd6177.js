(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{65:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return s}));var i=t(2),r=t(6),a=(t(0),t(73)),o={id:"iot",title:"IoT setup"},c={unversionedId:"iot",id:"iot",isDocsHomePage:!1,title:"IoT setup",description:"ESP8266",source:"@site/docs/SETUP.md",permalink:"/george/docs/iot",editUrl:"https://github.com/marcelovicentegc/george/edit/docs/docs/docs/SETUP.md",sidebar:"sidebar",previous:{title:"Configuration",permalink:"/george/docs/config"},next:{title:"Useful resources",permalink:"/george/docs/useful-resources"}},l=[{value:"ESP8266",id:"esp8266",children:[]}],p={rightToc:l};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"esp8266"},"ESP8266"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Make sure you have the ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.arduino.cc/en/Main/Software"}),"Arduino IDE")," installed on your machine.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Upload either a ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/marcelovicentegc/george/blob/master/src/esp8266/mqtt/mqtt.ino"}),".ino")," file:"),Object(a.b)("ol",{parentName:"li"},Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Install ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/knolleary/pubsubclient"}),"PubSubClient"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"And upload this to your module, making sure to assign your wifi network name (",Object(a.b)("inlineCode",{parentName:"p"},"SSID"),") and password (",Object(a.b)("inlineCode",{parentName:"p"},"PASSWORD"),") as well as the topic you want this module to be subscribed to (",Object(a.b)("inlineCode",{parentName:"p"},"TOPIC"),"):"))),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-c++"}),' #include <ESP8266WiFi.h>\n #include <PubSubClient.h>\n\n const char *SSID = "my wifi network";\n const char *PASSWORD = "the password is written on the router";\n\n const char *BROKER_MQTT = "localhost";\n int BROKER_PORT = 1883;\n\n const char *TOPIC = "";\n\n void initPins();\n void initSerial();\n void initWiFi();\n void initMQTT();\n\n WiFiClient espClient;\n PubSubClient MQTT(espClient);\n\n void setup()\n {\n     initPins();\n     initSerial();\n     initWiFi();\n     initMQTT();\n }\n\n void loop()\n {\n     if (!MQTT.connected())\n     {\n         reconnectMQTT();\n     }\n     recconectWiFi();\n     MQTT.loop();\n }\n\n void initPins()\n {\n     pinMode(D5, OUTPUT);\n     digitalWrite(D5, 0);\n }\n\n void initSerial()\n {\n     Serial.begin(115200);\n }\n void initWiFi()\n {\n     delay(10);\n     Serial.println("Connecting to: " + String(SSID));\n\n     WiFi.begin(SSID, PASSWORD);\n     while (WiFi.status() != WL_CONNECTED)\n     {\n         delay(100);\n         Serial.print(".");\n     }\n     Serial.println();\n     Serial.print("Connecting to " + String(SSID) + " | IP => ");\n     Serial.println(WiFi.localIP());\n }\n\n void initMQTT()\n {\n     MQTT.setServer(BROKER_MQTT, BROKER_PORT);\n     MQTT.setCallback(mqtt_callback);\n }\n\n void mqtt_callback(char *topic, byte *payload, unsigned int length)\n {\n\n     String message;\n     for (int i = 0; i < length; i++)\n     {\n         char c = (char)payload[i];\n         message += c;\n     }\n     Serial.println("Topic => " + String(topic) + " | Value => " + String(message));\n     if (message == "1")\n     {\n         digitalWrite(D5, 1);\n     }\n     else\n     {\n         digitalWrite(D5, 0);\n     }\n     Serial.flush();\n }\n\n void reconnectMQTT()\n {\n     while (!MQTT.connected())\n     {\n         Serial.println("Trying to connect to the MQTT Broker: " + String(BROKER_MQTT));\n         if (MQTT.connect("ESP8266-ESP12-E"))\n         {\n             Serial.println("Connected");\n             MQTT.subscribe(TOPIC);\n         }\n         else\n         {\n             Serial.println("Failed to reconnect");\n             Serial.println("Trying to reconnect in 2 seconds");\n             delay(2000);\n         }\n     }\n }\n\n void recconectWiFi()\n {\n     while (WiFi.status() != WL_CONNECTED)\n     {\n         delay(100);\n         Serial.print(".");\n     }\n }\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Or a ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/marcelovicentegc/george/blob/master/src/esp8266/mqtt/mqtt.lua"}),".lua")," file:"),Object(a.b)("ol",{parentName:"li"},Object(a.b)("li",{parentName:"ol"},"Make sure to pass your network name as the third parameter (replacing ",Object(a.b)("inlineCode",{parentName:"li"},'"username"'),") of the ",Object(a.b)("inlineCode",{parentName:"li"},"Client")," method, and your network password as the fourth parameter (replacing ",Object(a.b)("inlineCode",{parentName:"li"},'"password"'),") and to assing the topic you want to subscribe this module to to the ",Object(a.b)("inlineCode",{parentName:"li"},"topic")," variable:")),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-lua"}),'-- initiate the mqtt client and set keepalive timer to 120sec\n mqtt = mqtt.Client("client_id", 120, "username", "password")\n local topic = ""\n\n mqtt:on("connect", function(con) print ("connected") end)\n mqtt:on("offline", function(con) print ("offline") end)\n\n -- on receive message\n mqtt:on("message", function(conn, topic, data)\n print(topic .. ":" )\n if data ~= nil then\n     print(data)\n end\n end)\n\n mqtt:connect("hostname", port, 0, function(conn)\n print("connected")\n -- subscribe topic with qos = 0\n mqtt:subscribe(topic, 0, function(conn)\n     -- publish a message with data = my_message, QoS = 0, retain = 0\n    mqtt:publish("my_topic","my_message",0,0, function(conn)\n    print("sent")\n     end)\n end)\n end)\n')))))}s.isMDXComponent=!0},73:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var i=t(0),r=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),s=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=s(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=s(t),d=i,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||a;return t?r.a.createElement(m,c(c({ref:n},p),{},{components:t})):r.a.createElement(m,c({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var p=2;p<a;p++)o[p]=t[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);